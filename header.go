// Copyright 2017 Tom Thorogood. All rights reserved.
// Use of this source code is governed by a Modified
// BSD License that can be found in the LICENSE file.

package bindata

import (
	"os"
	"path/filepath"
	"text/template"
)

func init() {
	template.Must(baseTemplate.New("header").Funcs(template.FuncMap{
		"relative": filepath.Rel,
		"toslash":  filepath.ToSlash,
		"getwd":    os.Getwd,
	}).Parse(`{{- /* This makes e.g. Github ignore diffs in generated files. */ -}}
// Code generated by go-bindata.
{{if $.Config.Prefix -}}
	//  prefix: {{$.Config.Prefix}}
{{end -}}
{{- if $.Config.Dev -}}
	//  debug: dev
{{else if $.Config.Debug -}}
	//  debug: true
{{end -}}
{{- if not $.Config.MemCopy -}}
	//  memcopy: false
{{end -}}
{{- if not $.Config.Compress -}}
	//  compress: false
{{end -}}
{{- if and $.Config.Compress (not $.Config.DecompressOnce) -}}
	//  decompress: always
{{end -}}
{{- if not $.Config.Metadata -}}
	//  metadata: false
{{end -}}
{{- if gt $.Config.Mode 0 -}}
	//  mode: {{printf "%04o" $.Config.Mode}}
{{end -}}
{{- if gt $.Config.ModTime 0 -}}
	//  modtime: {{$.Config.ModTime}}
{{end -}}
{{- if not $.Config.AssetDir -}}
	//  asset-dir: false
{{end -}}
{{- if not $.Config.Restore -}}
	//  restore: false
{{end -}}
{{- if ne $.Config.HashFormat 0 -}}
	//  hash-format: {{$.Config.HashFormat}}
{{end -}}
{{- if ne $.Config.HashLength 16 -}}
	//  hash-length: {{$.Config.HashLength}}
{{end -}}
{{- if ne $.Config.HashEncoding 0 -}}
	//  hash-encoding: {{$.Config.HashEncoding}}
{{end -}}
{{- if $.Config.HashKey -}}
	//  hash-key: <omitted>
{{end -}}
// sources:
{{$wd := getwd -}}
{{range .Assets -}}
	//  {{toslash (relative $wd .Path)}}
{{end -}}
// DO NOT EDIT!

{{if $.Config.Tags -}}
// +build {{$.Config.Tags}}

{{end -}}

package {{$.Config.Package}}`))
}
