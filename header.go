// This work is subject to the CC0 1.0 Universal (CC0 1.0) Public Domain Dedication
// license. Its contents can be found at:
// http://creativecommons.org/publicdomain/zero/1.0/

package bindata

import (
	"fmt"
	"io"
	"os"
	"path/filepath"
)

// writeHeader writes the file header.
func writeHeader(w io.Writer, c *Config, toc []Asset) error {
	// Write the header. This makes e.g. Github ignore diffs in generated files.
	if _, err := fmt.Fprint(w, "// Code generated by go-bindata.\n"); err != nil {
		return err
	}
	if _, err := fmt.Fprint(w, "// sources:\n"); err != nil {
		return err
	}

	wd, err := os.Getwd()
	if err != nil {
		return err
	}

	for _, asset := range toc {
		relative, _ := filepath.Rel(wd, asset.Path)
		if _, err = fmt.Fprintf(w, "// %s\n", filepath.ToSlash(relative)); err != nil {
			return err
		}
	}
	if _, err = fmt.Fprint(w, "// DO NOT EDIT!\n\n"); err != nil {
		return err
	}

	// Write build tags, if applicable.
	if len(c.Tags) > 0 {
		if _, err = fmt.Fprintf(w, "// +build %s\n\n", c.Tags); err != nil {
			return err
		}
	}

	// Write package declaration.
	_, err = fmt.Fprintf(w, "package %s\n\n", c.Package)
	return err
}
